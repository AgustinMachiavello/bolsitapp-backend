# Generated by Django 3.1.3 on 2020-11-16 03:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('ci', models.PositiveIntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MaxLengthValidator(8), django.core.validators.MinLengthValidator(8)], verbose_name='CI')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('last_name', models.CharField(max_length=20, verbose_name='Last Name')),
                ('email', models.CharField(max_length=50, unique=True, verbose_name='Email')),
                ('password', models.CharField(max_length=20, verbose_name='Password')),
                ('sex', models.CharField(choices=[('F', 'Female'), ('M', 'Male'), ('N/A', 'No Answer')], max_length=3, verbose_name='Sex')),
                ('phone', models.PositiveIntegerField(validators=[django.core.validators.MaxLengthValidator(11)], verbose_name='Phone Number')),
                ('address', models.CharField(max_length=50, verbose_name='Address')),
                ('postal_code', models.PositiveIntegerField(validators=[django.core.validators.MaxLengthValidator(5), django.core.validators.MinLengthValidator(5)], verbose_name='Postal Code')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
